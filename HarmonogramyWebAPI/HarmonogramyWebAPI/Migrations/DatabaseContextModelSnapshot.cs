// <auto-generated />
using System;
using HarmonogramyWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HarmonogramyWebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Employment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmploymentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxHoursPerDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHoursPerWeek")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Employments");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DayOff")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("StartDay")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.ScheduleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduleUsers");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfEmployment")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("DateOfFired")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmploymentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmpoyed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PositionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmploymentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.ScheduleUser", b =>
                {
                    b.HasOne("HarmonogramyWebAPI.Models.Schedule", "Schedule")
                        .WithMany("Users")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HarmonogramyWebAPI.Models.User", "User")
                        .WithMany("Schedules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.User", b =>
                {
                    b.HasOne("HarmonogramyWebAPI.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("HarmonogramyWebAPI.Models.Employment", "Employment")
                        .WithMany("Users")
                        .HasForeignKey("EmploymentId");

                    b.HasOne("HarmonogramyWebAPI.Models.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId");

                    b.Navigation("Company");

                    b.Navigation("Employment");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Employment", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.Schedule", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HarmonogramyWebAPI.Models.User", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
